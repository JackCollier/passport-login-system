const bcrypt = require("bcrypt");
const passport = require("passport");

// for production connect to DB - definitely don't store them here...
const user_storage = [];

const initializePassport = require("../passport-config");
initializePassport(
  passport,
  (email) => user_storage.find((user) => user.email === email),
  (id) => user_storage.find((user) => user.id === id)
);
exports.getStaticPage = (req, res) => {
  res.render("index.ejs");
};

exports.getLogin = (req, res) => {
  res.render("login.ejs");
};

exports.getRegister = (req, res) => {
  res.render("register.ejs");
};

exports.postRegister = async (req, res) => {
  try {
    const hashedPassword = await bcrypt.hash(req.body.password, 10); // 10 is fast/secure for this purpose
    user_storage.push({
      id: Date.now().toString(), // in real scenario this will be generated by DB
      name: req.body.name,
      email: req.body.email,
      password: hashedPassword,
    });
    res.redirect("/login");
  } catch (error) {
    res.redirect("/register");
  }
  console.log(user_storage);
};

exports.postLogin = (req, res) => {};
